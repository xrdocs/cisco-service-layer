<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Python<sp/>Quick<sp/>Tutorial</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Table<sp/>of<sp/>Contents</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Server<sp/>Setup](#server)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Running<sp/>the<sp/>tutorial](#quick)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Generate<sp/>gRPC<sp/>Code](#gen)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Initialize<sp/>the<sp/>client<sp/>server<sp/>connection](#init)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Register<sp/>the<sp/>VRF](#vrf)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Add<sp/>a<sp/>Batch<sp/>of<sp/>Routes](#route)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&apos;server&apos;&gt;&lt;/a&gt;Server<sp/>Setup</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>the<sp/>server<sp/>side,<sp/>we<sp/>need<sp/>to<sp/>configure<sp/>GRPC<sp/>and<sp/>enable<sp/>the<sp/>service<sp/>layer<sp/>through<sp/>the<sp/>following<sp/>CLI<sp/>configuration:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>!<sp/>Configure<sp/>GRPC</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>configure</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>grpc<sp/>port<sp/>57344</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>grpc<sp/>address-family<sp/>ipv4</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>commit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>!<sp/>Configure<sp/>Service<sp/>layer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>configure</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>grpc<sp/>service-layer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>commit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">We<sp/>also<sp/>need<sp/>to<sp/>configure<sp/>a<sp/>server<sp/>IP<sp/>address.<sp/>To<sp/>configure<sp/>an<sp/>IP<sp/>address<sp/>on<sp/>the<sp/>management<sp/>interface,<sp/>one<sp/>can<sp/>use<sp/>dhcp<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>!<sp/>Configure<sp/>the<sp/>Mgmt<sp/>Interface</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>configure</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>interface<sp/>MgmtEth<sp/>0/RP0/CPU0/0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ipv4<sp/>address<sp/>dhcp</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>no<sp/>shut</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>commit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>end</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>check<sp/>the<sp/>IP<sp/>address<sp/>assigned:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>show<sp/>ip<sp/>interface<sp/>brief</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>the<sp/>client<sp/>side,<sp/>the<sp/>very<sp/>first<sp/>thing<sp/>we<sp/>need<sp/>to<sp/>do<sp/>is<sp/>set<sp/>the<sp/>server<sp/>IP<sp/>address<sp/>and<sp/>gRPC<sp/>port.<sp/>You<sp/>can<sp/>check<sp/>your<sp/>port<sp/>number<sp/>by<sp/>running<sp/>the<sp/>following<sp/>CLI<sp/>command<sp/>on<sp/>the<sp/>IOS-XR<sp/>server<sp/>box<sp/>(should<sp/>be<sp/>the<sp/>same<sp/>as<sp/>the<sp/>one<sp/>configured):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>show<sp/>run<sp/>grpc</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>server<sp/>address<sp/>and<sp/>port<sp/>number<sp/>as<sp/>environment<sp/>variables<sp/>with<sp/>the</highlight></codeline>
<codeline><highlight class="normal">following<sp/>example<sp/>command<sp/>(this<sp/>is<sp/>assuming<sp/>you<sp/>are<sp/>in<sp/>bash<sp/>shell):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>export<sp/>SERVER_IP=192.168.122.192</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>export<sp/>SERVER_PORT=57344</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>above<sp/>assumes<sp/>that<sp/>the<sp/>IP<sp/>address<sp/>of<sp/>the<sp/>node<sp/>is<sp/>192.168.122.192.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>completes<sp/>all<sp/>the<sp/>setup<sp/>needed<sp/>to<sp/>start<sp/>writing<sp/>some<sp/>code!<sp/>Hop<sp/>into</highlight></codeline>
<codeline><highlight class="normal">your<sp/>python<sp/>interpreter<sp/>and<sp/>try<sp/>out<sp/>some<sp/>of<sp/>the<sp/>commands<sp/>to<sp/>get<sp/>familiar</highlight></codeline>
<codeline><highlight class="normal">with<sp/>the<sp/>API.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>&lt;a<sp/>name=&apos;quick&apos;&gt;&lt;/a&gt;Running<sp/>the<sp/>tutorial</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>basic<sp/>tutorial<sp/>will<sp/>walk<sp/>you<sp/>through<sp/>getting<sp/>started<sp/>with<sp/>the<sp/>Service<sp/>Layer<sp/>API,<sp/>in<sp/>particular<sp/>on<sp/>how<sp/>to<sp/>add<sp/>a<sp/>route.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>may<sp/>require<sp/>some<sp/>initial<sp/>python<sp/>and<sp/>GRPC<sp/>setup,<sp/>which<sp/>will<sp/>be<sp/>explained<sp/>below.<sp/>For<sp/>now,<sp/>if<sp/>you<sp/>already<sp/>have<sp/>passed<sp/>this<sp/>setup<sp/>step,<sp/>run<sp/>the<sp/>example:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>grpc/python/src</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>python3<sp/>tutorial/quickstart.py</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>sections<sp/>explain<sp/>the<sp/>details<sp/>of<sp/>the<sp/>above<sp/>example<sp/>tutorial.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&apos;gen&apos;&gt;&lt;/a&gt;Generate<sp/>gRPC<sp/>Code<sp/>(optional<sp/>in<sp/>this<sp/>example)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>are<sp/>not<sp/>familiar<sp/>with<sp/>gRPC,<sp/>we<sp/>recommend<sp/>you<sp/>refer<sp/>to<sp/>gRPC&apos;s</highlight></codeline>
<codeline><highlight class="normal">documentation<sp/>before<sp/>beginning<sp/>with<sp/>our<sp/>tutorial:<sp/>[gRPC<sp/>Docs](http://www.grpc.io/docs/)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>should<sp/>have<sp/>received<sp/>all<sp/>of<sp/>the<sp/>Protobuf<sp/>files<sp/>required<sp/>to<sp/>run<sp/>the<sp/>Cisco</highlight></codeline>
<codeline><highlight class="normal">Service<sp/>Laye<sp/>API.<sp/>In<sp/>order<sp/>to<sp/>generate<sp/>the<sp/>gRPC<sp/>client<sp/>side<sp/>code<sp/>stubs<sp/>in<sp/>python,<sp/>run<sp/>the<sp/>following<sp/>command<sp/>(you<sp/>may<sp/>have<sp/>to<sp/>adjust<sp/>the<sp/>path<sp/>to<sp/>the<sp/>proto<sp/>files<sp/>and<sp/>the<sp/>output<sp/>according<sp/>to<sp/>your<sp/>requirements):<sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**For<sp/>convenience,<sp/>these<sp/>files<sp/>are<sp/>also<sp/>committed<sp/>in<sp/>this<sp/>repo<sp/>under<sp/>grpc/python/src/genpy/<sp/>(so<sp/>you<sp/>can<sp/>skip<sp/>this<sp/>step).**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>$<sp/>protoc<sp/>-I<sp/>../../protos<sp/>--python_out=.<sp/>--grpc_out=./genpy/<sp/>--plugin=protoc-gen-grpc=`which<sp/>grpc_python_plugin`<sp/>../../protos/*.proto</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>generates<sp/>the<sp/>code<sp/>stubs<sp/>that<sp/>we<sp/>will<sp/>now<sp/>utilize<sp/>to<sp/>create<sp/>a<sp/>client.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>files<sp/>are<sp/>recognizable<sp/>from<sp/>the<sp/>&quot;_pb2&quot;<sp/>and<sp/><sp/>&quot;_pb2_grpc&quot;<sp/>that<sp/>is<sp/>appended<sp/>to<sp/>the<sp/>name<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">proto<sp/>files<sp/>they<sp/>were<sp/>generated<sp/>from<sp/>(example:<sp/>sl_route_ipv4_pb2.py).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&apos;init&apos;&gt;&lt;/a&gt;Initialize<sp/>the<sp/>client<sp/>server<sp/>connection</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>order<sp/>to<sp/>follow<sp/>this<sp/>quick<sp/>tutorial,<sp/>it<sp/>is<sp/>best<sp/>to<sp/>open<sp/>the<sp/>files<sp/>in<sp/>`grpc/python/src/tutorial/`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>quickstart.py<sp/><sp/>:<sp/>The<sp/>full<sp/>tutorial<sp/>example</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>client_init.py<sp/>:<sp/>Used<sp/>to<sp/>setup<sp/>the<sp/>client-server<sp/>connection</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrf.py<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Used<sp/>to<sp/>setup<sp/>the<sp/>Route<sp/>vertical</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>shown<sp/>in<sp/>quickstart.py,<sp/>the<sp/>first<sp/>thing<sp/>to<sp/>do<sp/>is<sp/>to<sp/>setup<sp/>the<sp/>GRPC<sp/>channel:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>server_ip,<sp/>server_port<sp/>=<sp/>util.get_server_ip_port()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>channel<sp/>=<sp/>grpc.insecure_channel(server_ip,<sp/>server_port)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Once<sp/>connected,<sp/>we<sp/>need<sp/>to<sp/>handshake<sp/>the<sp/>API<sp/>version<sp/>number<sp/>with<sp/>the<sp/>server.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>same<sp/>RPC<sp/>call<sp/>also<sp/>sets<sp/>up<sp/>an<sp/>asynchronous<sp/>stream<sp/>of<sp/>notifications<sp/>from<sp/>the<sp/>server.<sp/>The<sp/>first<sp/>notification<sp/>would<sp/>be<sp/>the<sp/>response<sp/>to<sp/>our<sp/>version<sp/>number<sp/>message<sp/>i.e.<sp/>SLInitMsg,<sp/>as<sp/>a<sp/>SLGlobalNotif<sp/>event<sp/>with<sp/>type<sp/>SL_GLOBAL_EVENT_TYPE_VERSION.<sp/>This<sp/>can<sp/>be<sp/>done<sp/>by<sp/>calling:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SLGlobalInitNotif(init_msg,<sp/>Timeout)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>above<sp/>function<sp/>takes<sp/>the<sp/>client<sp/>major,<sp/>minor<sp/>and<sp/>sub<sp/>version<sp/>numbers<sp/>and<sp/>sends<sp/>them<sp/>to<sp/>the<sp/>Service<sp/>Layer<sp/>service<sp/>to<sp/>get<sp/>a<sp/>handshake<sp/>on<sp/>the<sp/>API<sp/>version<sp/>number.<sp/>More<sp/>on<sp/>this<sp/>below.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>code<sp/>snippets<sp/>are<sp/>copied<sp/>from<sp/>file<sp/>client_init.py</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>client_init(stub,<sp/>event):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Create<sp/>SLInitMsg<sp/>to<sp/>handshake<sp/>the<sp/>version<sp/>number<sp/>with<sp/>the<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>The<sp/>Server<sp/>will<sp/>allow/deny<sp/>access<sp/>based<sp/>on<sp/>the<sp/>version<sp/>number.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>The<sp/>same<sp/>RPC<sp/>is<sp/>used<sp/>to<sp/>setup<sp/>a<sp/>notification<sp/>channel<sp/>for<sp/>global</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>events<sp/>coming<sp/>from<sp/>the<sp/>server.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>#<sp/>Set<sp/>the<sp/>client<sp/>version<sp/>number<sp/>based<sp/>on<sp/>the<sp/>current<sp/>proto<sp/>files&apos;<sp/>version</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_msg<sp/>=<sp/>sl_global_pb2.SLInitMsg()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_msg.MajorVer<sp/>=<sp/>sl_version_pb2.SL_MAJOR_VERSION</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_msg.MinorVer<sp/>=<sp/>sl_version_pb2.SL_MINOR_VERSION</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_msg.SubVer<sp/>=<sp/>sl_version_pb2.SL_SUB_VERSION</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Set<sp/>a<sp/>very<sp/>large<sp/>timeout,<sp/>as<sp/>we<sp/>will<sp/>&quot;for<sp/>ever&quot;<sp/>loop<sp/>listening<sp/>on</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>notifications<sp/>from<sp/>the<sp/>server</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/>365*24*60*60<sp/>#<sp/>Seconds</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>This<sp/>for<sp/>loop<sp/>will<sp/>never<sp/>end<sp/>unless<sp/>the<sp/>server<sp/>closes<sp/>the<sp/>session</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>response<sp/>in<sp/>stub.SLGlobalInitNotif(init_msg,<sp/>Timeout):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>response.EventType<sp/>==<sp/>sl_global_pb2.SL_GLOBAL_EVENT_TYPE_VERSION:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(sl_common_types_pb2.SLErrorStatus.SL_SUCCESS<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.ErrStatus.Status):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>above<sp/>python<sp/>definition<sp/>also<sp/>handles<sp/>other<sp/>events<sp/>such<sp/>as<sp/>errors<sp/>and<sp/>heartbeats.</highlight></codeline>
<codeline><highlight class="normal">Notice<sp/>that<sp/>the<sp/>client_init<sp/>definition<sp/>above<sp/>takes<sp/>a<sp/>GRPC<sp/>stub<sp/>as<sp/>an<sp/>argument.</highlight></codeline>
<codeline><highlight class="normal">This<sp/>is<sp/>typically<sp/>created<sp/>through:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Create<sp/>the<sp/>gRPC<sp/>stub.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stub<sp/>=<sp/>sl_global_pb2_grpc.SLGlobalStub(channel)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Since<sp/>the<sp/>above<sp/>client_init<sp/>function<sp/>would<sp/>never<sp/>return,<sp/>it<sp/>is<sp/>best<sp/>to<sp/>spawn<sp/>it<sp/>as<sp/>a<sp/>thread,<sp/>and<sp/>run<sp/>it<sp/>in<sp/>the<sp/>background.<sp/>In<sp/>python,<sp/>we<sp/>do<sp/>so<sp/>by<sp/>calling<sp/>a<sp/>threading<sp/>event:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Spawn<sp/>a<sp/>thread<sp/>for<sp/>global<sp/>events</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>def<sp/>global_init(channel):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Create<sp/>the<sp/>gRPC<sp/>stub.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stub<sp/>=<sp/>sl_global_pb2_grpc.SLGlobalStub(channel)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>Create<sp/>a<sp/>thread<sp/>sync<sp/>event.<sp/>This<sp/>will<sp/>be<sp/>used<sp/>to<sp/>order<sp/>thread<sp/>execution</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event<sp/>=<sp/>threading.Event()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>The<sp/>main<sp/>reason<sp/>we<sp/>spawn<sp/>a<sp/>thread<sp/>here,<sp/>is<sp/>that<sp/>we<sp/>dedicate<sp/>a<sp/>GRPC</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>channel<sp/>to<sp/>listen<sp/>on<sp/>Global<sp/>asynchronous<sp/>events/notifications.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>This<sp/>thread<sp/>will<sp/>be<sp/>handling<sp/>these<sp/>event<sp/>notifications.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>threading.Thread(target<sp/>=<sp/>global_thread,<sp/>args=(stub,<sp/>event))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.start()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&apos;vrf&apos;&gt;&lt;/a&gt;Register<sp/>the<sp/>VRF</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>general,<sp/>before<sp/>we<sp/>can<sp/>use<sp/>a<sp/>vertical<sp/>function<sp/>like<sp/>the<sp/>route<sp/>APIs,<sp/>we<sp/>have<sp/>to<sp/>register<sp/>on<sp/>that<sp/>vertical.<sp/>The<sp/>route<sp/>API<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>register<sp/>based<sp/>on<sp/>a<sp/>per<sp/>VRF<sp/>basis.</highlight></codeline>
<codeline><highlight class="normal">So,<sp/>before<sp/>any<sp/>additions<sp/>or<sp/>modification<sp/>of<sp/>routes<sp/>can<sp/>be<sp/>made<sp/>we<sp/>need<sp/>to<sp/>register<sp/>with<sp/>the<sp/>proper<sp/>VRF,<sp/>which<sp/>requires<sp/>sending<sp/>a<sp/>VRF<sp/>registration<sp/>message<sp/>and<sp/>then<sp/>an<sp/>EOF<sp/>message<sp/>to<sp/>clean<sp/>up<sp/>any<sp/>stale<sp/>routes<sp/>that<sp/>may<sp/>be<sp/>there<sp/>from<sp/>an<sp/>older<sp/>configuration<sp/>(this<sp/>will<sp/>become<sp/>handy<sp/>on<sp/>restart<sp/>or<sp/>recovery<sp/>scenarios).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>snippets<sp/>are<sp/>copied<sp/>from<sp/>file<sp/>vrf.py</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Next<sp/>up,<sp/>create<sp/>the<sp/>stub<sp/>instance<sp/>using<sp/>the<sp/>channel.<sp/>This<sp/>stub<sp/>will</highlight></codeline>
<codeline><highlight class="normal">have<sp/>the<sp/>exact<sp/>same<sp/>methods<sp/>that<sp/>are<sp/>available<sp/>on<sp/>the<sp/>server.<sp/>To<sp/>do<sp/>this,</highlight></codeline>
<codeline><highlight class="normal">we<sp/>need<sp/>to<sp/>import<sp/>the<sp/>stub<sp/>code<sp/>generated<sp/>from<sp/>our<sp/>ProtoBuf<sp/>files.<sp/>Depending<sp/>on</highlight></codeline>
<codeline><highlight class="normal">what<sp/>calls<sp/>you<sp/>want<sp/>to<sp/>make,<sp/>different<sp/>stubs<sp/>will<sp/>be<sp/>used.<sp/>We<sp/>are<sp/>going<sp/>to<sp/>be</highlight></codeline>
<codeline><highlight class="normal">making<sp/>changes<sp/>to<sp/>our<sp/>IPv4<sp/>routes,<sp/>so<sp/>we<sp/>use<sp/>the<sp/>SLRoutev4OperStub.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>genpy<sp/>import<sp/>sl_route_ipv4_pb2_grpc</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>stub<sp/>=<sp/>sl_route_ipv4_pb2_grpc.SLRoutev4OperStub(channel)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Time<sp/>to<sp/>fill<sp/>in<sp/>some<sp/>variables!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>the<sp/>`SLVrfRegMsg`<sp/>object.<sp/>Generating<sp/>a<sp/>`SLVrfRegMsg`<sp/>object<sp/>allows<sp/>us<sp/>to</highlight></codeline>
<codeline><highlight class="normal">use<sp/>dot<sp/>notation<sp/>to<sp/>access<sp/>and<sp/>set<sp/>it&apos;s<sp/>variables.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>genpy<sp/>import<sp/>sl_route_common_pb2</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfMsg<sp/>=<sp/>sl_route_common_pb2.SLVrfRegMsg()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>VRF<sp/>registration<sp/>message<sp/>contains<sp/>a<sp/>set<sp/>of<sp/>VRF<sp/>registration<sp/>objects.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>an<sp/>`SLVrfReg`<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfObj<sp/>=<sp/>sl_route_common_pb2.SLVrfReg()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>VRF<sp/>registration<sp/>object<sp/>attributes:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VRF<sp/>name.<sp/>The<sp/>default<sp/>VRF<sp/>in<sp/>IOS-XR<sp/>is<sp/>called<sp/>&quot;default&quot;:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfObj.VrfName<sp/>=<sp/>&apos;default&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Administrative<sp/>distance.<sp/>The<sp/>admin<sp/>distance<sp/>is<sp/>used<sp/>by<sp/>RIB<sp/>to<sp/>make<sp/>best<sp/>path<sp/>decisions.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfObj.AdminDistance<sp/>=<sp/>2</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VRF<sp/>purge<sp/>interval.<sp/>This<sp/>is<sp/>useful<sp/>on<sp/>restart<sp/>scenarios.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfObj.VrfPurgeIntervalSeconds<sp/>=<sp/>500</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>registration<sp/>message<sp/>to<sp/>the<sp/>list.<sp/>In<sp/>the<sp/>case<sp/>of<sp/>a<sp/>bulk<sp/>object,<sp/>we<sp/>can</highlight></codeline>
<codeline><highlight class="normal">append<sp/>other<sp/>VRF<sp/>objects<sp/>to<sp/>the<sp/>list.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfList.append(vrfObj)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>the<sp/>list<sp/>is<sp/>completed,<sp/>assign<sp/>`vrf_list`<sp/>to<sp/>the<sp/>`SLVrfRegMsg`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>vrfMsg.VrfRegMsgs.extend(vrfList)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Make<sp/>the<sp/>RPC<sp/>call.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">We<sp/>are<sp/>ready<sp/>to<sp/>make<sp/>our<sp/>call<sp/>to<sp/>the<sp/>API.<sp/>We&apos;ll<sp/>send<sp/>the</highlight></codeline>
<codeline><highlight class="normal">`SLVrfRegMsg<sp/>vrfMsg`<sp/>and<sp/>a<sp/>timeout<sp/>interval<sp/>(in<sp/>seconds)<sp/>for<sp/>the<sp/>gRPC</highlight></codeline>
<codeline><highlight class="normal">server.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/>10<sp/>#<sp/>Seconds</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>response<sp/>=<sp/>stub.SLRoutev4VrfRegOp(vrfMsg,<sp/>Timeout)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Note<sp/>that<sp/>the<sp/>vrfMsg<sp/>has<sp/>an<sp/>Oper<sp/>field<sp/>that<sp/>determines<sp/>the<sp/>operation<sp/>type:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SL_REGOP_REGISTER<sp/><sp/>:<sp/>used<sp/>for<sp/>registrations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SL_REGOP_EOF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>used<sp/>for<sp/>EOF<sp/>signaling.<sp/>Useful<sp/>for<sp/>restart<sp/>scenarios</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SL_REGOP_UNREGISTER:<sp/>used<sp/>to<sp/>unregister,<sp/>which<sp/>would<sp/>clean<sp/>all<sp/>previous<sp/>roues<sp/>added<sp/>in<sp/>that<sp/>VRF.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Finally,<sp/>we<sp/>can<sp/>print<sp/>our<sp/>response<sp/>from<sp/>the<sp/>server.<sp/>Notice<sp/>that,<sp/>since<sp/>we<sp/>can<sp/>add<sp/>a<sp/>batch<sp/>of<sp/>VRF<sp/>registrations,<sp/>we<sp/>want<sp/>to<sp/>print<sp/>a<sp/>result<sp/>code<sp/>for<sp/>each<sp/>individual<sp/>response.</highlight></codeline>
<codeline><highlight class="normal">To<sp/>do<sp/>this,<sp/>we<sp/>check<sp/>if<sp/>the<sp/>response<sp/>is<sp/>an<sp/>error,<sp/>and<sp/>if<sp/>it<sp/>is<sp/>we<sp/>print<sp/>the</highlight></codeline>
<codeline><highlight class="normal">name<sp/>of<sp/>the<sp/>vrf<sp/>that<sp/>caused<sp/>the<sp/>error<sp/>as<sp/>well<sp/>as<sp/>the<sp/>hexadecimal<sp/>error</highlight></codeline>
<codeline><highlight class="normal">code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(response.StatusSummary.Status<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLErrorStatus.SL_SUCCESS):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;VRF<sp/>%s<sp/>Success!&quot;<sp/>%(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLRegOp.keys()[oper])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Error<sp/>code<sp/>for<sp/>VRF<sp/>%s<sp/>is<sp/>0x%x!<sp/>Response:&quot;<sp/>%<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLRegOp.keys()[oper],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.StatusSummary.Status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>response</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>If<sp/>we<sp/>have<sp/>partial<sp/>failures<sp/>within<sp/>the<sp/>batch,<sp/>let&apos;s<sp/>print<sp/>them</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(response.StatusSummary.Status<sp/>==<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLErrorStatus.SL_SOME_ERR):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>result<sp/>in<sp/>response.Results:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Error<sp/>code<sp/>for<sp/>%s<sp/>is<sp/>0x%x&quot;<sp/>%(result.VrfName,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ErrStatus.Status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>&lt;a<sp/>name=&apos;route&apos;&gt;&lt;/a&gt;Add<sp/>a<sp/>Batch<sp/>of<sp/>Routes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>we<sp/>have<sp/>registered<sp/>the<sp/>VRF,<sp/>we<sp/>can<sp/>start<sp/>adding<sp/>routes.<sp/>We<sp/>will<sp/>show</highlight></codeline>
<codeline><highlight class="normal">adding<sp/>a<sp/>batch<sp/>of<sp/>10<sp/>routes<sp/>to<sp/>the<sp/>RIB.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>an<sp/>empty<sp/>list<sp/>of<sp/>routes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>routeList<sp/>=<sp/>[]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>`SLRoutev4Msg`<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rtMsg<sp/>=<sp/>sl_route_ipv4_pb2.SLRoutev4Msg()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Fill<sp/>in<sp/>the<sp/>route<sp/>attributes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VRF<sp/>Name</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rtMsg.VrfName<sp/>=<sp/>&apos;default&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>a<sp/>loop<sp/>that<sp/>will<sp/>add<sp/>10<sp/>incrementing<sp/>routes<sp/>to<sp/>the<sp/>RIB<sp/>table.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(10):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>a<sp/>`SLRoutev4`<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>route<sp/>=<sp/>sl_route_ipv4_pb2.SLRoutev4()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">IP<sp/>address</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>import<sp/>ipaddress</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>route.Prefix<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(ipaddress.ip_address(&apos;20.0.&apos;+<sp/>str(i)<sp/>+<sp/>&apos;.0&apos;))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Prefix<sp/>Length</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>route.PrefixLen<sp/>=<sp/>24</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Administrative<sp/>distance<sp/>(this<sp/>can<sp/>override<sp/>the<sp/>VRF<sp/>registration<sp/>admin<sp/>distance)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>route.RouteCommon.AdminDistance<sp/>=<sp/>2</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Set<sp/>the<sp/>route&apos;s<sp/>paths.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>route<sp/>may<sp/>have<sp/>one<sp/>or<sp/>many<sp/>paths.</highlight></codeline>
<codeline><highlight class="normal">Create<sp/>an<sp/>empty<sp/>list<sp/>of<sp/>paths<sp/>as<sp/>a<sp/>placeholder<sp/>for<sp/>these<sp/>paths.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths<sp/>=<sp/>[]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Create<sp/>an<sp/>`SLRoutePath`<sp/>object.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>sl_route_common_pb2.SLRoutePath()</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Fill<sp/>in<sp/>the<sp/>path<sp/>attributes.<sp/>Note:<sp/>if<sp/>you<sp/>are<sp/>deleting<sp/>a<sp/>route,<sp/>paths<sp/>are<sp/>not</highlight></codeline>
<codeline><highlight class="normal">required<sp/>to<sp/>be<sp/>added,<sp/>so<sp/>it<sp/>is<sp/>better<sp/>not<sp/>to<sp/>fill<sp/>in<sp/>this<sp/>part<sp/>for<sp/>a<sp/>delete.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Path<sp/>next<sp/>hop<sp/>address</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.NexthopAddress.V4Address<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(ipaddress.ip_address(&apos;10.10.10.1&apos;))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Next<sp/>hop<sp/>interface<sp/>name</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.NexthopInterface.Name<sp/>=<sp/>&apos;GigabitEthernet0/0/0/0&apos;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>path<sp/>to<sp/>the<sp/>list</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths.append(path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Let&apos;s<sp/>create<sp/>another<sp/>path<sp/>as<sp/>equal<sp/>cost<sp/>multi-path<sp/>(ECMP)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path<sp/>=<sp/>sl_route_common_pb2.SLRoutePath()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.NexthopAddress.V4Address<sp/>=<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int(ipaddress.ip_address(&apos;10.10.10.2&apos;))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path.NexthopInterface.Name<sp/>=<sp/>&apos;GigabitEthernet0/0/0/0&apos;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths.append(path)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>paths<sp/>to<sp/>the<sp/>route<sp/>object.<sp/>In<sp/>the<sp/>example<sp/>quickstart.py<sp/>tutorial,<sp/>we</highlight></codeline>
<codeline><highlight class="normal">add<sp/>a<sp/>line<sp/>checking<sp/>that<sp/>the<sp/>operation<sp/>is<sp/>not<sp/>a<sp/>delete<sp/>operation,<sp/>as<sp/>we<sp/>would</highlight></codeline>
<codeline><highlight class="normal">not<sp/>need<sp/>to<sp/>add<sp/>paths<sp/>for<sp/>a<sp/>delete.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>oper<sp/>!=<sp/>sl_common_types_pb2.SL_OBJOP_DELETE:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>route.PathList.extend(paths)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>route<sp/>to<sp/>`route_list`<sp/>(bulk<sp/>routes)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>routeList.append(route)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Assign<sp/>the<sp/>`routeList`<sp/>to<sp/>the<sp/>`rtMsg`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rtMsg.Routes.extend(routeList)</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Make<sp/>the<sp/>RPC<sp/>call.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Timeout<sp/>=<sp/>10<sp/>#<sp/>Seconds</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>rtMsg.Oper<sp/>=<sp/>oper<sp/>#<sp/>Desired<sp/>ADD,<sp/>UPDATE,<sp/>DELETE<sp/>operation</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>response<sp/>=<sp/>stub.SLRoutev4Op(rtMsg,<sp/>Timeout)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Again,<sp/>in<sp/>the<sp/>quickstart.py<sp/>tutorial<sp/>we<sp/>have<sp/>examples<sp/>of<sp/>other<sp/>route<sp/>calls</highlight></codeline>
<codeline><highlight class="normal">beyond<sp/>just<sp/>adding<sp/>bulk<sp/>routes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>RPC<sp/>route<sp/>operations</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>for<sp/>add:<sp/>sl_common_types_pb2.SL_OBJOP_ADD</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>for<sp/>update:<sp/>sl_common_types_pb2.SL_OBJOP_UPDATE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>for<sp/>delete:<sp/>sl_common_types_pb2.SL_OBJOP_DELETE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>route_operation(channel,<sp/>sl_common_types_pb2.SL_OBJOP_ADD)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">These<sp/>calls<sp/>show<sp/>examples<sp/>of<sp/>bulk<sp/>additions,<sp/>updates,<sp/>and<sp/>deletes</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Check<sp/>the<sp/>server&apos;s<sp/>response.<sp/>Here<sp/>again<sp/>we<sp/>can<sp/>check<sp/>each<sp/>individual<sp/>route<sp/>that</highlight></codeline>
<codeline><highlight class="normal">was<sp/>added<sp/>for<sp/>an<sp/>error<sp/>message.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(sl_common_types_pb2.SLErrorStatus.SL_SUCCESS<sp/>==<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.StatusSummary.Status):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Route<sp/>%s<sp/>Success!&quot;<sp/>%(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLObjectOp.keys()[oper])</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Error<sp/>code<sp/>for<sp/>route<sp/>%s<sp/>is<sp/>0x%x&quot;<sp/>%<sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLObjectOp.keys()[oper],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.StatusSummary.Status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>If<sp/>we<sp/>have<sp/>partial<sp/>failures<sp/>within<sp/>the<sp/>batch,<sp/>let&apos;s<sp/>print<sp/>them</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(response.StatusSummary.Status<sp/>==<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl_common_types_pb2.SLErrorStatus.SL_SOME_ERR):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>result<sp/>in<sp/>response.Results:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>&quot;Error<sp/>code<sp/>for<sp/>%s/%d<sp/>is<sp/>0x%x&quot;<sp/>%(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str(ipaddress.ip_address(result.Prefix)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.PrefixLen,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.ErrStatus.Status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">That&apos;s<sp/>all<sp/>for<sp/>now!<sp/>Remember<sp/>some<sp/>key<sp/>takeaways:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>The<sp/>VRF<sp/>must<sp/>be<sp/>registered<sp/>before<sp/>adding,<sp/>updating,<sp/>or<sp/>removing<sp/>routes</highlight></codeline>
<codeline><highlight class="normal">from<sp/>the<sp/>RIB.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">2.<sp/>All<sp/>API<sp/>operations<sp/>are<sp/>CRUD<sp/>based<sp/>(Create,<sp/>Read,<sp/>Update,<sp/>Delete),<sp/>and<sp/>the<sp/>initial<sp/>setup<sp/>of<sp/>all<sp/>calls<sp/>to<sp/>the<sp/>same<sp/>object<sp/>will<sp/>be<sp/>(about)<sp/>the<sp/>same.</highlight></codeline>
    </programlisting>
    <location file="/slapi/grpc/python/src/tutorial/README.md"/>
  </compounddef>
</doxygen>
