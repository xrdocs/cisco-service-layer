<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__SLRouteIPv4Oper" kind="group">
    <compoundname>SLRouteIPv4Oper</compoundname>
    <title>SLRouteIPv4Oper</title>
    <innerclass refid="structSLRoutev4" prot="public">SLRoutev4</innerclass>
    <innerclass refid="structSLRoutev4Msg" prot="public">SLRoutev4Msg</innerclass>
    <innerclass refid="structSLRoutev4Res" prot="public">SLRoutev4Res</innerclass>
    <innerclass refid="structSLRoutev4MsgRsp" prot="public">SLRoutev4MsgRsp</innerclass>
    <innerclass refid="structSLRoutev4GetMsg" prot="public">SLRoutev4GetMsg</innerclass>
    <innerclass refid="structSLRoutev4GetMsgRsp" prot="public">SLRoutev4GetMsgRsp</innerclass>
    <innerclass refid="structSLRoutev4NotifRoute" prot="public">SLRoutev4NotifRoute</innerclass>
    <innerclass refid="structSLRoutev4Notif" prot="public">SLRoutev4Notif</innerclass>
    <innernamespace refid="namespaceSLRoutev4Oper">SLRoutev4Oper</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1gab68aec7539b4bbb28a7e284dbc18a46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4GlobalsGet</definition>
        <argsstring>(SLRouteGlobalsGetMsg) returns(SLRouteGlobalsGetMsgRsp)</argsstring>
        <name>SLRoutev4GlobalsGet</name>
        <param>
          <type><ref refid="structSLRouteGlobalsGetMsg" kindref="compound">SLRouteGlobalsGetMsg</ref></type>
        </param>
        <briefdescription>
<para>Global Route operations. </para>        </briefdescription>
        <detaileddescription>
<para>Used to retrieve Global Route information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1gafd0731ae5836a4c9e1d59c820ca1a34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4GlobalStatsGet</definition>
        <argsstring>(SLRouteGlobalStatsGetMsg) returns(SLRouteGlobalStatsGetMsgRsp)</argsstring>
        <name>SLRoutev4GlobalStatsGet</name>
        <param>
          <type><ref refid="structSLRouteGlobalStatsGetMsg" kindref="compound">SLRouteGlobalStatsGetMsg</ref></type>
        </param>
        <briefdescription>
<para>Used to retrieve Global Route Stats. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga67a891660cfd5b51e993dcd3a0674023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4VrfRegOp</definition>
        <argsstring>(SLVrfRegMsg) returns(SLVrfRegMsgRsp)</argsstring>
        <name>SLRoutev4VrfRegOp</name>
        <param>
          <type><ref refid="structSLVrfRegMsg" kindref="compound">SLVrfRegMsg</ref></type>
        </param>
        <briefdescription>
<para>VRF registration operations. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="structSLVrfRegMsg_1a177c43ef7fd6f54f9efe2c34f83e2133" kindref="member">SLVrfRegMsg.Oper</ref> = SL_REGOP_REGISTER: VRF registration: Sends a list of VRF registration messages and expects a list of registration responses. A client Must Register a VRF BEFORE routes can be added/modified in the associated VRF.</para><para><ref refid="structSLVrfRegMsg_1a177c43ef7fd6f54f9efe2c34f83e2133" kindref="member">SLVrfRegMsg.Oper</ref> = SL_REGOP_UNREGISTER: VRF Un-registeration: Sends a list of VRF un-registration messages and expects a list of un-registration responses. This can be used to convey that the client is no longer interested in this VRF. All previously installed routes would be lost.</para><para><ref refid="structSLVrfRegMsg_1a177c43ef7fd6f54f9efe2c34f83e2133" kindref="member">SLVrfRegMsg.Oper</ref> = SL_REGOP_EOF: VRF End Of File message. After Registration, the client is expected to send an EOF message to convey the end of replay of the client&apos;s known objects. This is especially useful under certain restart scenarios when the client and the server are trying to synchronize their Routes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga4dd74c2083dcc5960a9cf8ae46815fce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4VrfRegGet</definition>
        <argsstring>(SLVrfRegGetMsg) returns(SLVrfRegGetMsgRsp)</argsstring>
        <name>SLRoutev4VrfRegGet</name>
        <param>
          <type><ref refid="structSLVrfRegGetMsg" kindref="compound">SLVrfRegGetMsg</ref></type>
        </param>
        <briefdescription>
<para>VRF get. Used to retrieve VRF attributes from the server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga0ba79416b427604ca9904ce474e6f5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4VrfGetStats</definition>
        <argsstring>(SLVrfRegGetMsg) returns(SLVRFGetStatsMsgRsp)</argsstring>
        <name>SLRoutev4VrfGetStats</name>
        <param>
          <type><ref refid="structSLVrfRegGetMsg" kindref="compound">SLVrfRegGetMsg</ref></type>
        </param>
        <briefdescription>
<para>Used to retrieve VRF Stats from the server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga59b16475f0c334eb1463ee85956ebb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4Op</definition>
        <argsstring>(SLRoutev4Msg) returns(SLRoutev4MsgRsp)</argsstring>
        <name>SLRoutev4Op</name>
        <param>
          <type><ref refid="structSLRoutev4Msg" kindref="compound">SLRoutev4Msg</ref></type>
        </param>
        <briefdescription>
<para>Route operations. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_ADD: Route add. Fails if the route already exists.</para><para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_UPDATE: Route update. Creates or updates the route.</para><para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_DELETE: Route delete. The route path is not necessary to delete the route. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga46c7d6ff6c494509c9f97c003e84ff62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4Get</definition>
        <argsstring>(SLRoutev4GetMsg) returns(SLRoutev4GetMsgRsp)</argsstring>
        <name>SLRoutev4Get</name>
        <param>
          <type><ref refid="structSLRoutev4GetMsg" kindref="compound">SLRoutev4GetMsg</ref></type>
        </param>
        <briefdescription>
<para>Retrieves route attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga615993c637c42ed9b65bd7b1bfc09b74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4OpStream</definition>
        <argsstring>(stream SLRoutev4Msg) returns(stream SLRoutev4MsgRsp)</argsstring>
        <name>SLRoutev4OpStream</name>
        <param>
          <type>stream</type>
          <declname>SLRoutev4Msg</declname>
        </param>
        <briefdescription>
<para>Stream Route operations. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_ADD: Route add. Fails if the route already exists.</para><para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_UPDATE: Route update. Creates or updates the route.</para><para><ref refid="structSLRoutev4Msg_1a183e55cf2ed1f3e6be439b5eb62acbaf" kindref="member">SLRoutev4Msg.Oper</ref> = SL_OBJOP_DELETE: Route delete. The route path is not necessary to delete the route. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1ga5ff6c135e5d22539eb16080e79e8d66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4GetStream</definition>
        <argsstring>(stream SLRoutev4GetMsg) returns(stream SLRoutev4GetMsgRsp)</argsstring>
        <name>SLRoutev4GetStream</name>
        <param>
          <type>stream</type>
          <declname>SLRoutev4GetMsg</declname>
        </param>
        <briefdescription>
<para>Retrieves route attributes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SLRouteIPv4Oper_1gaf248fb2c08e64c817bd3ed2509eadd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rpc</type>
        <definition>rpc SLRoutev4Oper::SLRoutev4GetNotifStream</definition>
        <argsstring>(stream SLRouteGetNotifMsg) returns(stream SLRoutev4Notif)</argsstring>
        <name>SLRoutev4GetNotifStream</name>
        <param>
          <type>stream</type>
          <declname>SLRouteGetNotifMsg</declname>
        </param>
        <briefdescription>
<para>Route Redistribution Operations. </para>        </briefdescription>
        <detaileddescription>
<para>This call is used to get a stream of route notifications. It can be used to get &quot;push&quot; notifications for route adds/updates/deletes. The caller must maintain the GRPC channel as long as there is interest in route notifications.</para><para>The call takes a stream of per-VRF notification requests. The success/failure of the notification request is relayed in the <ref refid="structSLRouteNotifStatus" kindref="compound">SLRouteNotifStatus</ref> followed by a Start marker, any routes if present, and an End Marker. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_ipv4.proto" line="97" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines RPC calls for IPv4 route changes and VRF registration. </para>    </briefdescription>
    <detaileddescription>
<para>This service declares both the Vrf Registration, as well as adding, deleting and getting IPv4 routes. </para>    </detaileddescription>
  </compounddef>
</doxygen>
