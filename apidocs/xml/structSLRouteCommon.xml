<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structSLRouteCommon" kind="struct" language="C++" prot="public">
    <compoundname>SLRouteCommon</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structSLRouteCommon_1a7a54d735e217ed7c1f865f86bfe2cf7b" prot="public" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SLRouteCommon::AdminDistance</definition>
        <argsstring></argsstring>
        <name>AdminDistance</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Adminstrative distance of the route. </para>        </briefdescription>
        <detaileddescription>
<para>[0-255]. RIB uses this field to break the tie when multiple sources install the same route. Lower distance is preferred over higher distance. The per route object admin distance overrides the default&apos;s admin distance set at VRF registration. see <ref refid="structSLVrfReg" kindref="compound">SLVrfReg</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_common.proto" line="221" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSLRouteCommon_1ac4424de67431d9b9a8cc748258430c24" prot="public" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SLRouteCommon::LocalLabel</definition>
        <argsstring></argsstring>
        <name>LocalLabel</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Local label associated with this route. </para>        </briefdescription>
        <detaileddescription>
<para>This is an optional field that can be used to simulatenously setup an ILM entry (e.g. head end of an MPLS LSP) for the same route. This is especially useful when setting up an MPLS LSP (a /32-route towards the remote LSP peer e.g. 2.2.2.2/32) which is required for MPLS VPN labeled routes.</para><para>Note: MPLS VPN labeled routes can resolve only on:<itemizedlist>
<listitem><para>/32-routes with valid LocalLabel and a valid egress MPLS path label </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_common.proto" line="231" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSLRouteCommon_1ab363d66e02dcb1c13db8f5f9d16cfc23" prot="public" static="no" mutable="no">
        <type>uint32</type>
        <definition>uint32 SLRouteCommon::Tag</definition>
        <argsstring></argsstring>
        <name>Tag</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Route Tag. </para>        </briefdescription>
        <detaileddescription>
<para>Routes are usually tagged to prevent loops during redistribution between protocols. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_common.proto" line="235" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSLRouteCommon_1a314570b3837390ec9f529279cc07be79" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string SLRouteCommon::SrcProto</definition>
        <argsstring></argsstring>
        <name>SrcProto</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Source Protocol. </para>        </briefdescription>
        <detaileddescription>
<para>For redistributed messages via notification stream only, ignored otherwise. Contact Cisco for supported protocol string names. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_common.proto" line="240" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSLRouteCommon_1aa414c362e5f4f9f93cd720dc4d3c8070" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string SLRouteCommon::SrcProtoTag</definition>
        <argsstring></argsstring>
        <name>SrcProtoTag</name>
        <initializer>= 5</initializer>
        <briefdescription>
<para>Source Protocol Tag. </para>        </briefdescription>
        <detaileddescription>
<para>This can be empty if N/A. For redistributed messages via notification stream only, ignored otherwise. Contact Cisco for supported protocol tags. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_route_common.proto" line="245" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Common IPv4/IPv6 route attributes. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/slapi/grpc/protos/sl_route_common.proto" line="214" column="1" bodyfile="/slapi/grpc/protos/sl_route_common.proto" bodystart="214" bodyend="246"/>
    <listofallmembers>
      <member refid="structSLRouteCommon_1a7a54d735e217ed7c1f865f86bfe2cf7b" prot="public" virt="non-virtual"><scope>SLRouteCommon</scope><name>AdminDistance</name></member>
      <member refid="structSLRouteCommon_1ac4424de67431d9b9a8cc748258430c24" prot="public" virt="non-virtual"><scope>SLRouteCommon</scope><name>LocalLabel</name></member>
      <member refid="structSLRouteCommon_1a314570b3837390ec9f529279cc07be79" prot="public" virt="non-virtual"><scope>SLRouteCommon</scope><name>SrcProto</name></member>
      <member refid="structSLRouteCommon_1aa414c362e5f4f9f93cd720dc4d3c8070" prot="public" virt="non-virtual"><scope>SLRouteCommon</scope><name>SrcProtoTag</name></member>
      <member refid="structSLRouteCommon_1ab363d66e02dcb1c13db8f5f9d16cfc23" prot="public" virt="non-virtual"><scope>SLRouteCommon</scope><name>Tag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
