<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sl__mpls_8proto" kind="file" language="C++">
    <compoundname>sl_mpls.proto</compoundname>
    <innerclass refid="structSLMplsLabelBlockKey" prot="public">SLMplsLabelBlockKey</innerclass>
    <innerclass refid="structSLMplsLabelBlockMsg" prot="public">SLMplsLabelBlockMsg</innerclass>
    <innerclass refid="structSLMplsLabelBlockMsgRes" prot="public">SLMplsLabelBlockMsgRes</innerclass>
    <innerclass refid="structSLMplsLabelBlockMsgRsp" prot="public">SLMplsLabelBlockMsgRsp</innerclass>
    <innerclass refid="structSLMplsLabelBlockGetMsg" prot="public">SLMplsLabelBlockGetMsg</innerclass>
    <innerclass refid="structSLMplsLabelBlockGetMsgRsp" prot="public">SLMplsLabelBlockGetMsgRsp</innerclass>
    <innerclass refid="structSlMplsReg" prot="public">SlMplsReg</innerclass>
    <innerclass refid="structSLMplsRegMsg" prot="public">SLMplsRegMsg</innerclass>
    <innerclass refid="structSLMplsRegMsgRsp" prot="public">SLMplsRegMsgRsp</innerclass>
    <innerclass refid="structSLMplsGetMsg" prot="public">SLMplsGetMsg</innerclass>
    <innerclass refid="structSLMplsGetMsgRsp" prot="public">SLMplsGetMsgRsp</innerclass>
    <innerclass refid="structSLMplsGetStatsMsgRsp" prot="public">SLMplsGetStatsMsgRsp</innerclass>
    <innerclass refid="structSLMplsPath" prot="public">SLMplsPath</innerclass>
    <innerclass refid="structSLMplsIlmKey" prot="public">SLMplsIlmKey</innerclass>
    <innerclass refid="structSLMplsCos" prot="public">SLMplsCos</innerclass>
    <innerclass refid="structSLMplsIlmEntry" prot="public">SLMplsIlmEntry</innerclass>
    <innerclass refid="structSLMplsIlmMsg" prot="public">SLMplsIlmMsg</innerclass>
    <innerclass refid="structSLMplsIlmRes" prot="public">SLMplsIlmRes</innerclass>
    <innerclass refid="structSLMplsIlmMsgRsp" prot="public">SLMplsIlmMsgRsp</innerclass>
    <innerclass refid="structSLMplsIlmGetMsg" prot="public">SLMplsIlmGetMsg</innerclass>
    <innerclass refid="structSLMplsIlmGetMsgRsp" prot="public">SLMplsIlmGetMsgRsp</innerclass>
    <innernamespace refid="namespaceSLMplsOper">SLMplsOper</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__SLMpls_1gab3280b80569f43dc1008464bbbbdd343" prot="public" static="no">
        <name>SlLabelAction</name>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a89ad9d73480c84999a8d592ed62efd22" prot="public">
          <name>SL_LABEL_ACTION_RESERVED</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>Reserved. 0x0. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343acecbbe68b0c529e2318db1a6e18f254a" prot="public">
          <name>SL_LABEL_ACTION_SWAP</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Swap. </para>          </briefdescription>
          <detaileddescription>
<para>0x1 Swap outer label and forward. Used at tunnel midpoint for swapping labels. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343ac7d249972bd073b0ee538bc5b46571ec" prot="public">
          <name>SL_LABEL_ACTION_POP_AND_FORWARD</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>Pop and forward. </para>          </briefdescription>
          <detaileddescription>
<para>0x2 Pop outer label and forward. Used for per CE and per prefix label disposition at egress PE. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343ad6a68f37daca0b8464687f3afdbda849" prot="public">
          <name>SL_LABEL_ACTION_POP_AND_LOOKUP_IPV4</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
<para>Pop and lookup IPv4. </para>          </briefdescription>
          <detaileddescription>
<para>0x3 Pop and lookup the IPv4 next header in the specified Vrf. Used for per vrf labels at egress PE. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a33f1ec6de4cf17be142a0d0435436b12" prot="public">
          <name>SL_LABEL_ACTION_POP_AND_LOOKUP_IPV6</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
<para>Pop and lookup IPv6. </para>          </briefdescription>
          <detaileddescription>
<para>0x4 Pop and lookup the IPv6 next header in the specified Vrf. Used for per vrf labels at egress PE. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a20369cd6ad464209624900f14d6606c4" prot="public">
          <name>SL_LABEL_ACTION_POP_AND_LOOKUP</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
<para>Pop and lookup. </para>          </briefdescription>
          <detaileddescription>
<para>0x5 Pop and lookup the next header in the packet (MPLS, IPv4, IPv6) in the specified Vrf. Used for per vrf labels at egress PE. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>MPLS label actions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_mpls.proto" line="252" column="1" bodyfile="/slapi/grpc/protos/sl_mpls.proto" bodystart="252" bodyend="275"/>
      </memberdef>
      <memberdef kind="enum" id="group__SLMpls_1ga82d8e1fede2512fbc7c9b5d27d911d21" prot="public" static="no">
        <name>SLMplsLabelBlockType</name>
        <enumvalue id="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21a395d899add8b3d107cc6137abac0b272" prot="public">
          <name>SL_MPLS_LABEL_BLOCK_TYPE_RESERVED</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>Reserved. 0x0. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21aac55155845c4b1511ccf075b706d0337" prot="public">
          <name>SL_MPLS_LABEL_BLOCK_TYPE_SRGB</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Segment Routing Global Block (SRGB) Block Type. 0x1. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21a71cef0db925042881ba1a8ce050595fd" prot="public">
          <name>SL_MPLS_LABEL_BLOCK_TYPE_CBF</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>Class Based Forwarding (CBF) Block Type. 0x2. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Label Block Types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_mpls.proto" line="277" column="1" bodyfile="/slapi/grpc/protos/sl_mpls.proto" bodystart="277" bodyend="284"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sl__mpls_8proto_1adbedb258e13546cc707a6ebb073a3d8a" prot="public" static="no" mutable="no">
        <type></type>
        <definition>syntax</definition>
        <argsstring></argsstring>
        <name>syntax</name>
        <initializer>= &quot;proto3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_mpls.proto" line="12" column="1" bodyfile="/slapi/grpc/protos/sl_mpls.proto" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sl__mpls_8proto_1a293eb43ea51d8359911f89a0e4c6284e" prot="public" static="no" mutable="no">
        <type>package</type>
        <definition>package service_layer</definition>
        <argsstring></argsstring>
        <name>service_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/slapi/grpc/protos/sl_mpls.proto" line="13" column="1" bodyfile="/slapi/grpc/protos/sl_mpls.proto" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>RPC proto file for MPLS types. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
 Copyright (c) 2019 by Cisco Systems, Inc. <heading level="2">All rights reserved. </heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>@file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@brief<sp/>RPC<sp/>proto<sp/>file<sp/>for<sp/>MPLS<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2019<sp/>by<sp/>Cisco<sp/>Systems,<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//@defgroup<sp/>MPLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//@brief<sp/>MPLS<sp/>service<sp/>definitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">syntax<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;proto3&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">package<sp/></highlight><highlight class="normal">service_layer;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sl_common_types.proto&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@defgroup<sp/>SLMpls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@ingroup<sp/>MPLS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Defines<sp/>RPCs<sp/>for<sp/>MPLS<sp/>Registrations,<sp/>label<sp/>block<sp/>reservations,<sp/>and<sp/>ILM<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>manipulations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clients<sp/>Must<sp/>register<sp/>for<sp/>MPLS<sp/>operations<sp/>e.g.<sp/>Incoming<sp/>Label<sp/>Map<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>registered,<sp/>a<sp/>client<sp/>Must<sp/>reserve<sp/>an<sp/>MPLS<sp/>label<sp/>(dynamic<sp/>allocation)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>using<sp/>it<sp/>as<sp/>an<sp/>incoming<sp/>label<sp/>map.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Labels<sp/>are<sp/>reserved<sp/>in<sp/>blocks<sp/>through<sp/>the<sp/>block<sp/>reservation<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>also<sp/>defines<sp/>RPC<sp/>calls<sp/>for<sp/>adding,<sp/>deleting,<sp/>updating,<sp/>and<sp/>querying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>incoming<sp/>label<sp/>map<sp/>entries<sp/>(see<sp/>RFC<sp/>3031)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Incoming<sp/>Label<sp/>Map<sp/>(ILM):<sp/>A<sp/>mapping<sp/>from<sp/>incoming<sp/>labels<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corresponding<sp/>NHLFEs.<sp/>It<sp/>is<sp/>used<sp/>when<sp/>forwarding<sp/>packets<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrive<sp/>as<sp/>labeled<sp/>packets.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Next<sp/>Hop<sp/>Forwarding<sp/>Entry<sp/>(NHLE):<sp/>An<sp/>entry<sp/>containing<sp/>next-hop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>information<sp/>and<sp/>label<sp/>manipulation<sp/>instructions.<sp/>This<sp/>is<sp/>also<sp/>referred<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>ILM<sp/>Path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">service<sp/><ref refid="namespaceSLMplsOper" kindref="compound">SLMplsOper</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//@addtogroup<sp/>SLMpls</highlight></codeline>
<codeline lineno="43"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Registration<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsRegMsg.Oper<sp/>=<sp/>SL_REGOP_REGISTER.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Global<sp/>MPLS<sp/>registration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>A<sp/>client<sp/>Must<sp/>Register<sp/>BEFORE<sp/>MPLS<sp/>objects<sp/>can<sp/>be<sp/>added/modified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsRegMsg.Oper<sp/>=<sp/>SL_REGOP_UNREGISTER.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Global<sp/>MPLS<sp/>un-registration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>This<sp/>call<sp/>is<sp/>used<sp/>to<sp/>end<sp/>all<sp/>MPLS<sp/>notifications<sp/>and<sp/>unregister<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>interest<sp/>in<sp/>MPLS<sp/>object<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>This<sp/>call<sp/>cleans<sp/>up<sp/>all<sp/>MPLS<sp/>objects<sp/>previously<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsRegMsg.Oper<sp/>=<sp/>SL_REGOP_EOF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>MPLS<sp/>End<sp/>Of<sp/>File.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>After<sp/>Registration,<sp/>the<sp/>client<sp/>is<sp/>expected<sp/>to<sp/>send<sp/>an<sp/>EOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>message<sp/>to<sp/>convey<sp/>the<sp/>end<sp/>of<sp/>replay<sp/>of<sp/>the<sp/>client&apos;s<sp/>known<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>especially<sp/>useful<sp/>under<sp/>certain<sp/>restart<sp/>scenarios<sp/>when<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>client<sp/>and<sp/>the<sp/>server<sp/>are<sp/>trying<sp/>to<sp/>synchronize<sp/>their<sp/>MPLS<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga78e6c73baac90df7abfa6ca091e2ad80" kindref="member">SLMplsRegOp</ref>(<ref refid="structSLMplsRegMsg" kindref="compound">SLMplsRegMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsRegMsgRsp" kindref="compound">SLMplsRegMsgRsp</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>global<sp/>MPLS<sp/>info<sp/>from<sp/>the<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga79d738c9ee98522626a4751fd6249119" kindref="member">SLMplsGet</ref>(<ref refid="structSLMplsGetMsg" kindref="compound">SLMplsGetMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsGetMsgRsp" kindref="compound">SLMplsGetMsgRsp</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>global<sp/>MPLS<sp/>Stats<sp/>from<sp/>the<sp/>server.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga539b1756cbf1a85ff88b3d509ff011f3" kindref="member">SLMplsGetStats</ref>(<ref refid="structSLMplsGetMsg" kindref="compound">SLMplsGetMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsGetStatsMsgRsp" kindref="compound">SLMplsGetStatsMsgRsp</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>Block<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsLabelBlockMsg.Oper<sp/>=<sp/>SL_OBJOP_ADD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Add<sp/>a<sp/>contiguous<sp/>label<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Add<sp/>request<sp/>may<sp/>fail<sp/>if<sp/>the<sp/>full<sp/>block<sp/>cannot<sp/>be<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsLabelBlockMsg.Oper<sp/>=<sp/>SL_OBJOP_DELETE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Delete<sp/>a<sp/>contiguous<sp/>label<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Delete<sp/>request<sp/>may<sp/>fail<sp/>if<sp/>the<sp/>block<sp/>is<sp/>in<sp/>use<sp/>or<sp/>the<sp/>keys<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>match<sp/>the<sp/>keys<sp/>used<sp/>on<sp/>add.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga4ea9b112f1cdc5f1216cf9e42e0f460d" kindref="member">SLMplsLabelBlockOp</ref>(<ref refid="structSLMplsLabelBlockMsg" kindref="compound">SLMplsLabelBlockMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsLabelBlockMsgRsp" kindref="compound">SLMplsLabelBlockMsgRsp</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>Label<sp/>Block<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga2773c59e052b2774a9d1322c5a0d8443" kindref="member">SLMplsLabelBlockGet</ref>(<ref refid="structSLMplsLabelBlockGetMsg" kindref="compound">SLMplsLabelBlockGetMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsLabelBlockGetMsgRsp" kindref="compound">SLMplsLabelBlockGetMsgRsp</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_ADD:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Add<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_UPDATE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Update<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_DELETE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Delete<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga75707c319101bd10c2845990f517c72b" kindref="member">SLMplsIlmOp</ref>(<ref refid="structSLMplsIlmMsg" kindref="compound">SLMplsIlmMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsIlmMsgRsp" kindref="compound">SLMplsIlmMsgRsp</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>MPLS<sp/>ILM<sp/>entry<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga9cf7a198a52975996dbea3be6bc13d12" kindref="member">SLMplsIlmGet</ref>(<ref refid="structSLMplsIlmGetMsg" kindref="compound">SLMplsIlmGetMsg</ref>)<sp/>returns<sp/>(<ref refid="structSLMplsIlmGetMsgRsp" kindref="compound">SLMplsIlmGetMsgRsp</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>stream<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structSLMplsLabelBlockKey" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_ADD:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Add<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_UPDATE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Update<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SLMplsIlmMsg.Oper<sp/>=<sp/>SL_OBJOP_DELETE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Delete<sp/>incoming<sp/>label<sp/>map<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1ga7af2f93b2d534cb94b1ddee0a0c50ece" kindref="member">SLMplsIlmOpStream</ref>(stream<sp/><ref refid="structSLMplsIlmMsg" kindref="compound">SLMplsIlmMsg</ref>)<sp/>returns<sp/>(stream<sp/>SLMplsIlmMsgRsp);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stream-Get<sp/>of<sp/>incoming<sp/>label<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>rpc<sp/><ref refid="group__SLMpls_1gaa1110bad417ff949f964df1f4bab6029" kindref="member">SLMplsIlmGetStream</ref>(stream<sp/><ref refid="structSLMplsIlmGetMsg" kindref="compound">SLMplsIlmGetMsg</ref>)<sp/>returns<sp/>(stream<sp/>SLMplsIlmGetMsgRsp);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125" refid="structSLMplsLabelBlockMsg" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>block<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>relay<sp/>the<sp/>label<sp/>block<sp/>key<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockKey" kindref="compound">SLMplsLabelBlockKey</ref><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Starting<sp/>label<sp/>value<sp/>of<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>StartLabel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>block<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>size<sp/>should<sp/>be<sp/>&lt;=<sp/>SLServerResponse.MaxLabelsPerBlock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>LabelBlockSize<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="135" refid="structSLMplsLabelBlockMsgRes" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>block<sp/>type.<sp/>See<sp/>definition<sp/>of<sp/>SlMplsLabelBlockType<sp/>for<sp/>valid<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>none<sp/>specified,<sp/>defaults<sp/>to<sp/>SL_MPLS_LABEL_BLOCK_TYPE_SRGB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ga82d8e1fede2512fbc7c9b5d27d911d21" kindref="member">SLMplsLabelBlockType</ref><sp/>BlockType<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>block<sp/>client<sp/>name<sp/>as<sp/>configured<sp/>e.g.<sp/>through<sp/>CLI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Client<sp/>name<sp/>is<sp/>ignored<sp/>if<sp/>BlockType<sp/>is<sp/>not<sp/>SL_MPLS_LABEL_BLOCK_TYPE_CBF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>ClientName<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structSLMplsLabelBlockMsgRsp" refkind="compound"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>block<sp/>batch<sp/>reservation<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>send<sp/>a<sp/>batch<sp/>of<sp/>label<sp/>block<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Oper<sp/>attributes<sp/>indicates<sp/>add<sp/>or<sp/>delete<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockMsg" kindref="compound">SLMplsLabelBlockMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>Block<sp/>Operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLCommonTypes_1ga0b166605b901d6e5ad5f7706ac60baf1" kindref="member">SLObjectOp</ref><sp/>Oper<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>label<sp/>blocks<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>size<sp/>should<sp/>be<sp/>&lt;=<sp/>SLServerResponse.MaxLabelBlocksPerRequest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsLabelBlockKey" kindref="compound">SLMplsLabelBlockKey</ref><sp/>MplsBlocks<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>block<sp/>reservation<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>result<sp/>status<sp/>corresponding<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>label<sp/>block<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockMsgRes" kindref="compound">SLMplsLabelBlockMsgRes</ref><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corresponding<sp/>error<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="structSLMplsLabelBlockGetMsg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>for<sp/>which<sp/>the<sp/>error<sp/>code<sp/>is<sp/>reported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsLabelBlockKey" kindref="compound">SLMplsLabelBlockKey</ref><sp/>Key<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>block<sp/>batch<sp/>reservation<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>a<sp/>summary<sp/>status<sp/>for<sp/>the<sp/>batch<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>errors<sp/>encountered,<sp/>the<sp/>Results<sp/>field<sp/>would<sp/>indicate<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>label<sp/>block<sp/>reservation<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockMsgRsp" kindref="compound">SLMplsLabelBlockMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Summary<sp/>result<sp/>of<sp/>the<sp/>bulk<sp/>operation<sp/>(refer<sp/>to<sp/>enum<sp/>SLErrorStatus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general,<sp/>the<sp/>StatusSummary<sp/>implies<sp/>one<sp/>of<sp/>3<sp/>things:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>SL_SUCCESS:<sp/>signifies<sp/>that<sp/>the<sp/>entire<sp/>bulk<sp/>operation<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Results<sp/>list<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="structSLMplsLabelBlockGetMsgRsp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>SL_SOME_ERR:<sp/>signifies<sp/>that<sp/>the<sp/>operation<sp/>failed<sp/>for<sp/>one<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries.<sp/>In<sp/>this<sp/>case,<sp/>Results<sp/>holds<sp/>the<sp/>result<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>individual<sp/>entry<sp/>in<sp/>the<sp/>bulk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>SL_RPC_XXX:<sp/>signifies<sp/>that<sp/>the<sp/>entire<sp/>bulk<sp/>operation<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Results<sp/>list<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>StatusSummary<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>errors,<sp/>this<sp/>field<sp/>indicates<sp/>which<sp/>entry<sp/>in<sp/>the<sp/>bulk<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erroneous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsLabelBlockMsgRes" kindref="compound">SLMplsLabelBlockMsgRes</ref><sp/>Results<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="structSlMplsReg" refkind="compound"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>Block<sp/>Get<sp/>Message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>query<sp/>previous<sp/>label<sp/>block<sp/>reservations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockGetMsg" kindref="compound">SLMplsLabelBlockGetMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>Block<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>Key<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>request<sp/>up<sp/>to<sp/>the<sp/>first<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;EntriesCount&apos;<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsLabelBlockKey" kindref="compound">SLMplsLabelBlockKey</ref><sp/>Key<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>entries<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>EntriesCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>GetNext<sp/>is<sp/>FALSE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request<sp/>up<sp/>to<sp/>&apos;EntriesCount&apos;<sp/>entries<sp/>starting<sp/>from<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>GetNext<sp/>is<sp/>TRUE,<sp/>or<sp/>if<sp/>the<sp/>key<sp/>exact<sp/>match<sp/>is<sp/>not<sp/>found:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request<sp/>up<sp/>to<sp/>&apos;EntriesCount&apos;<sp/>entries<sp/>starting<sp/>from<sp/>the<sp/>key&apos;s<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetNext<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="205" refid="structSLMplsRegMsg" refkind="compound"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Label<sp/>Block<sp/>get<sp/>message<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>the<sp/>response<sp/>to<sp/>the<sp/>label<sp/>block<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">message<sp/><ref refid="structSLMplsLabelBlockGetMsgRsp" kindref="compound">SLMplsLabelBlockGetMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>Of<sp/>File.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>True,<sp/>it<sp/>indicates<sp/>that<sp/>the<sp/>server<sp/>has<sp/>returned<sp/>M,<sp/>where<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M<sp/>&lt;<sp/>N,<sp/>of<sp/>the<sp/>original<sp/>N<sp/>requested<sp/>Entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="structSLMplsRegMsgRsp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Eof<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Status<sp/>of<sp/>the<sp/>Get<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returned<sp/>entries<sp/>as<sp/>requested<sp/>in<sp/>the<sp/>Get<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="structSLMplsGetMsg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>ErrStatus<sp/>is<sp/>SL_SUCCESS,<sp/>Entries<sp/>contains<sp/>the<sp/>info<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsLabelBlockKey" kindref="compound">SLMplsLabelBlockKey</ref><sp/>Entries<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="structSLMplsGetMsgRsp" refkind="compound"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Registration<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">message<sp/><ref refid="structSlMplsReg" kindref="compound">SlMplsReg</ref><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>the<sp/>Service<sp/>Layer<sp/>-&gt;<sp/>LSD<sp/>connection<sp/>is<sp/>lost,<sp/>this<sp/>specifies<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timeout<sp/>period<sp/>after<sp/>which<sp/>LSD<sp/>will<sp/>automatically<sp/>purge<sp/>the<sp/>installed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ILMs,<sp/>unless<sp/>the<sp/>service<sp/>layer:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>Sends<sp/>MPLS<sp/>Registration<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>Replays<sp/>all<sp/>label<sp/>blocks<sp/>and<sp/>ILMs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>and<sp/>sends<sp/>MPLS<sp/>EOF<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Similarly,<sp/>in<sp/>the<sp/>event<sp/>of<sp/>an<sp/>RP<sp/>Switchover<sp/>the<sp/>ILMs<sp/>must<sp/>be<sp/>replayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>the<sp/>purge<sp/>interval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Purge<sp/>timer<sp/>is<sp/>ignored<sp/>for<sp/>all<sp/>registration<sp/>messages<sp/>except<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SL_REGOP_REGISTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>PurgeIntervalSeconds<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Registration<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>for<sp/>MPLS<sp/>global<sp/>registration.<sp/>Clients<sp/>must<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>before<sp/>using<sp/>any<sp/>MPLS<sp/>service.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal">message<sp/><ref refid="structSLMplsRegMsg" kindref="compound">SLMplsRegMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Registration<sp/>Operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="structSLMplsGetStatsMsgRsp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLCommonTypes_1gabcd5b7bdb1e75e62f586e079e924f896" kindref="member">SLRegOp</ref><sp/>Oper<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Registration<sp/>Message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSlMplsReg" kindref="compound">SlMplsReg</ref><sp/>RegMsg<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Registration<sp/>response<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>result<sp/>of<sp/>the<sp/>MPLS<sp/>registration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">message<sp/><ref refid="structSLMplsRegMsgRsp" kindref="compound">SLMplsRegMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Get<sp/>Global<sp/>Info<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>query<sp/>MPLS<sp/>global<sp/>capabilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal">message<sp/><ref refid="structSLMplsGetMsg" kindref="compound">SLMplsGetMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Get<sp/>Global<sp/>Info<sp/>response<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>response<sp/>to<sp/>the<sp/>global<sp/>capabilities<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">message<sp/><ref refid="structSLMplsGetMsgRsp" kindref="compound">SLMplsGetMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>labels<sp/>that<sp/>can<sp/>be<sp/>allocated/freed<sp/>per<sp/>label<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>MaxLabelsPerBlock<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>label<sp/>blocks<sp/>that<sp/>can<sp/>be<sp/>allocated/freed<sp/>per<sp/>MplsLabelBlockMsg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>MaxLabelblocksPerLabelblockmsg<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>label<sp/>value<sp/>that<sp/>can<sp/>be<sp/>reserved<sp/>on<sp/>the<sp/>platform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MplsLabelBlockKey.StartLabel<sp/>&gt;=<sp/>MinStartLabel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>MinStartLabel<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>table<sp/>size<sp/>for<sp/>the<sp/>platform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MplsLabelBlockKey.StartLabel<sp/>&lt;=<sp/>LabelTableSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>LabelTableSize<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>ILM<sp/>objects<sp/>within<sp/>a<sp/>single<sp/>IlmMsg<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>MaxIlmPerIlmmsg<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>paths<sp/>per<sp/>ILM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>MaxPathsPerIlm<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="287" refid="structSLMplsPath" refkind="compound"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Get<sp/>Global<sp/>Stats<sp/>response<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>response<sp/>to<sp/>the<sp/>MPLS<sp/>statistics<sp/>query.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">message<sp/><ref refid="structSLMplsGetStatsMsgRsp" kindref="compound">SLMplsGetStatsMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Num<sp/>of<sp/>label<sp/>blocks<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>LabelBlockCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Num<sp/>ILMs<sp/>added<sp/>through<sp/>the<sp/>service<sp/>layer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>IlmCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>label<sp/>actions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__SLMpls_1gab3280b80569f43dc1008464bbbbdd343" kindref="member">SlLabelAction</ref><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserved.<sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a89ad9d73480c84999a8d592ed62efd22" kindref="member">SL_LABEL_ACTION_RESERVED</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap.<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>outer<sp/>label<sp/>and<sp/>forward.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>at<sp/>tunnel<sp/>midpoint<sp/>for<sp/>swapping<sp/>labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343acecbbe68b0c529e2318db1a6e18f254a" kindref="member">SL_LABEL_ACTION_SWAP</ref><sp/>=<sp/>0x1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>forward.<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>outer<sp/>label<sp/>and<sp/>forward.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>per<sp/>CE<sp/>and<sp/>per<sp/>prefix<sp/>label<sp/>disposition<sp/>at<sp/>egress<sp/>PE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343ac7d249972bd073b0ee538bc5b46571ec" kindref="member">SL_LABEL_ACTION_POP_AND_FORWARD</ref><sp/>=<sp/>0x2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup<sp/>IPv4.<sp/>0x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup<sp/>the<sp/>IPv4<sp/>next<sp/>header<sp/>in<sp/>the<sp/>specified<sp/>Vrf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>per<sp/>vrf<sp/>labels<sp/>at<sp/>egress<sp/>PE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343ad6a68f37daca0b8464687f3afdbda849" kindref="member">SL_LABEL_ACTION_POP_AND_LOOKUP_IPV4</ref><sp/>=<sp/>0x3;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup<sp/>IPv6.<sp/>0x4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup<sp/>the<sp/>IPv6<sp/>next<sp/>header<sp/>in<sp/>the<sp/>specified<sp/>Vrf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>per<sp/>vrf<sp/>labels<sp/>at<sp/>egress<sp/>PE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a33f1ec6de4cf17be142a0d0435436b12" kindref="member">SL_LABEL_ACTION_POP_AND_LOOKUP_IPV6</ref><sp/>=<sp/>0x4;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup.<sp/>0x5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop<sp/>and<sp/>lookup<sp/>the<sp/>next<sp/>header<sp/>in<sp/>the<sp/>packet<sp/>(MPLS,<sp/>IPv4,<sp/>IPv6)<sp/>in<sp/>the<sp/>specified<sp/>Vrf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>per<sp/>vrf<sp/>labels<sp/>at<sp/>egress<sp/>PE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1ggab3280b80569f43dc1008464bbbbdd343a20369cd6ad464209624900f14d6606c4" kindref="member">SL_LABEL_ACTION_POP_AND_LOOKUP</ref><sp/>=<sp/>0x5;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Label<sp/>Block<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__SLMpls_1ga82d8e1fede2512fbc7c9b5d27d911d21" kindref="member">SLMplsLabelBlockType</ref><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserved.<sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21a395d899add8b3d107cc6137abac0b272" kindref="member">SL_MPLS_LABEL_BLOCK_TYPE_RESERVED</ref><sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Segment<sp/>Routing<sp/>Global<sp/>Block<sp/>(SRGB)<sp/>Block<sp/>Type.<sp/>0x1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21aac55155845c4b1511ccf075b706d0337" kindref="member">SL_MPLS_LABEL_BLOCK_TYPE_SRGB</ref>=<sp/>0x1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>Based<sp/>Forwarding<sp/>(CBF)<sp/>Block<sp/>Type.<sp/>0x2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1gga82d8e1fede2512fbc7c9b5d27d911d21a71cef0db925042881ba1a8ce050595fd" kindref="member">SL_MPLS_LABEL_BLOCK_TYPE_CBF</ref><sp/>=<sp/>0x2;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>Path<sp/>(or<sp/>NHLFE)<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>holds<sp/>the<sp/>ILM<sp/>path<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal">message<sp/><ref refid="structSLMplsPath" kindref="compound">SLMplsPath</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>of<sp/>IPv4<sp/>or<sp/>IPv6<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLIpAddress" kindref="compound">SLIpAddress</ref><sp/>NexthopAddress<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>hop<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLInterface" kindref="compound">SLInterface</ref><sp/>NexthopInterface<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ECMP<sp/>load<sp/>weight<sp/>metric</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>LoadMetric<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VRF<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>VrfName<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Associated<sp/>MPLS<sp/>incoming<sp/>label&apos;s<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>label<sp/>action<sp/>dictates<sp/>what<sp/>to<sp/>do<sp/>with<sp/>the<sp/>incoming<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possible<sp/>actions<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SL_LABEL_ACTION_SWAP:<sp/>SWAP<sp/>the<sp/>incoming<sp/>label<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>specified<sp/>LabelStack<sp/>(see<sp/>below),<sp/>and<sp/>forward<sp/>the<sp/>packet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>attributes:<sp/>NexthopInterface,<sp/>VrfName,<sp/>NexthopAddress.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SL_LABEL_ACTION_POP_AND_FORWARD:<sp/>Pop<sp/>the<sp/>label,<sp/>and<sp/>forward<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>packet<sp/>to<sp/>the<sp/>specified<sp/>nexthop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>attributes:<sp/>NexthopInterface,<sp/>VrfName,<sp/>NexthopAddress.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="structSLMplsIlmKey" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>-<sp/>SL_LABEL_ACTION_POP_AND_LOOKUP:<sp/>Pop<sp/>the<sp/>label,<sp/>and<sp/>lookup<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>packet&apos;s<sp/>next<sp/>header&apos;s<sp/>address<sp/>in<sp/>the<sp/>specified<sp/>VrfName.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Path<sp/>attributes:<sp/>VrfName.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLMpls_1gab3280b80569f43dc1008464bbbbdd343" kindref="member">SlLabelAction</ref><sp/>Action<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>identifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path-id<sp/>is<sp/>used<sp/>to<sp/>uniquely<sp/>identify<sp/>a<sp/>path<sp/>when<sp/>it<sp/>comes<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>protection<sp/>(Fast<sp/>Re-Route<sp/>-<sp/>FRR).<sp/>It<sp/>is<sp/>not<sp/>used<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="structSLMplsCos" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general,<sp/>for<sp/>FRR,<sp/>There<sp/>are<sp/>3<sp/>main<sp/>path<sp/>attributes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>Primary.<sp/>The<sp/>path<sp/>is<sp/>the<sp/>main<sp/>path<sp/>to<sp/>carry<sp/>traffic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>Protected.<sp/>A<sp/>primary<sp/>path<sp/>with<sp/>a<sp/>configured<sp/>backup<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>Backup.<sp/>The<sp/>path<sp/>is<sp/>protecting<sp/>a<sp/>primary<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE1:<sp/>a<sp/>primary<sp/>path<sp/>(A)<sp/>can<sp/>be<sp/>simultaneously<sp/>protected<sp/>(by<sp/>B),<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>acting<sp/>as<sp/>a<sp/>backup<sp/>for<sp/>another<sp/>path<sp/>(C).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>example,<sp/>the<sp/>primary<sp/>path<sp/>C<sp/>is<sp/>protected<sp/>by<sp/>A<sp/>(which<sp/>happens<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>primary).<sp/>So<sp/>the<sp/>primary<sp/>path<sp/>(A)<sp/>is<sp/>Primary,<sp/>Protected,<sp/>and<sp/>Backup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>are<sp/>various<sp/>path<sp/>types<sp/>based<sp/>on<sp/>combinations<sp/>of<sp/>attributes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>1.<sp/>Pure<sp/>Primary<sp/>i.e.<sp/>Not<sp/>Protected<sp/>and<sp/>is<sp/>not<sp/>a<sp/>Backup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>PathId<sp/>is<sp/>optional.<sp/>ProtectedPathBitmap<sp/>=<sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="structSLMplsIlmEntry" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>2.<sp/>Primary<sp/>and<sp/>Protected.<sp/>Path<sp/>is<sp/>not<sp/>a<sp/>Backup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>PathId<sp/>is<sp/>mandatory.<sp/>ProtectedPathBitmap<sp/>=<sp/>0x0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>3.<sp/>Primary<sp/>and<sp/>Not<sp/>Protected.<sp/>Path<sp/>is<sp/>also<sp/>a<sp/>Backup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>PathId<sp/>is<sp/>mandatory.<sp/>ProtectedPathBitmap<sp/>=<sp/>0xYYYY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>4.<sp/>Primary<sp/>and<sp/>Protected.<sp/>Path<sp/>is<sp/>also<sp/>a<sp/>Backup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>PathId<sp/>is<sp/>mandatory.<sp/>ProtectedPathBitmap<sp/>=<sp/>0xYYYY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>5.<sp/>Pure<sp/>Backup.<sp/>Protection<sp/>is<sp/>not<sp/>allowed<sp/>for<sp/>backup<sp/>paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/>PathId<sp/>is<sp/>mandatory.<sp/>ProtectedPathBitmap<sp/>=<sp/>0xYYYY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="structSLMplsIlmMsg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE2:<sp/>Pure<sp/>backup<sp/>path-id<sp/>uses<sp/>a<sp/>different<sp/>range<sp/>than<sp/>primary<sp/>path-ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>valid<sp/>range<sp/>of<sp/>primary<sp/>path<sp/>IDs,<sp/>and<sp/>pure<sp/>backup<sp/>path<sp/>IDS<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>platform<sp/>dependent<sp/>and<sp/>can<sp/>be<sp/>retrieved<sp/>through<sp/>the<sp/>client<sp/>init<sp/>message.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>PathId<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>protection<sp/>bitmap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bitmap<sp/>of<sp/>paths<sp/>this<sp/>Backup<sp/>path<sp/>is<sp/>protecting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Example:<sp/>If<sp/>this<sp/>path<sp/>is<sp/>protecting<sp/>paths<sp/>with<sp/>IDs<sp/>4,<sp/>5<sp/>and<sp/>6,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bitmap<sp/>to:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x38<sp/>==&gt;<sp/>0011<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="structSLMplsIlmRes" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>|--<sp/>path<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||--<sp/>path<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|--<sp/>path<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(1<sp/>&lt;&lt;<sp/>(pathId_1<sp/>-<sp/>1))<sp/><sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(pathId_2<sp/>-<sp/>1))<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>(pathId_3<sp/>-<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/>uint64<sp/>ProtectedPathBitmap<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>label<sp/>stack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stack<sp/>of<sp/>labels<sp/>that<sp/>is<sp/>pushed<sp/>when<sp/>the<sp/>packet<sp/>is<sp/>switched<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="structSLMplsIlmMsgRsp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Label<sp/>size<sp/>is<sp/>LSB<sp/>20<sp/>bits.<sp/>Forwarding<sp/>will<sp/>set<sp/>EXP,<sp/>TTL<sp/>and<sp/>BOS.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>primary<sp/>path,<sp/>typically<sp/>only<sp/>1<sp/>label<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>backup<sp/>paths,<sp/>more<sp/>than<sp/>1<sp/>label<sp/>can<sp/>be<sp/>used.<sp/>If<sp/>more<sp/>than<sp/>one<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>used,<sp/>remote<sp/>backup<sp/>addresses<sp/>must<sp/>be<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>labels<sp/>pushed<sp/>for<sp/>primary<sp/>and<sp/>backup<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>platform<sp/>dependent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/>uint32<sp/>LabelStack<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Remote<sp/>router<sp/>backup<sp/>address.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>is<sp/>used<sp/>for<sp/>backup<sp/>MPLS<sp/>path<sp/>with<sp/>more<sp/>than<sp/>one<sp/>label,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Typically<sp/>associated<sp/>with<sp/>the<sp/>PQ<sp/>routers<sp/>and<sp/>remote<sp/>Loop<sp/>Free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alternatives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>N+1<sp/>backup<sp/>labels,<sp/>N<sp/>remote<sp/>backup<sp/>addresses<sp/>must<sp/>be<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLIpAddress" kindref="compound">SLIpAddress</ref><sp/>RemoteAddress<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>entry&apos;s<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>defines<sp/>the<sp/>Incoming<sp/>Label<sp/>Map<sp/>key<sp/>attributes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmKey" kindref="compound">SLMplsIlmKey</ref><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Incoming<sp/>local<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="structSLMplsIlmGetMsg" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>LocalLabel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>Exp<sp/>bits<sp/>or<sp/>CoS<sp/>forwarding<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsCos" kindref="compound">SLMplsCos</ref><sp/>SlMplsCosVal<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>entry&apos;s<sp/>CoS<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>contains<sp/>either<sp/>EXP<sp/>bits<sp/>or<sp/>a<sp/>forwarding<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">message<sp/><ref refid="structSLMplsCos" kindref="compound">SLMplsCos</ref><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>oneof<sp/>value<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LSB<sp/>3<sp/>bits<sp/>with<sp/>valid<sp/>range<sp/>&lt;0-7&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>used<sp/>to<sp/>configure<sp/>E-LSPs<sp/>(see<sp/>RFC<sp/>3270)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>Exp<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>indicate<sp/>that<sp/>this<sp/>is<sp/>also<sp/>an<sp/>E-LSP<sp/>entry<sp/>and<sp/>all<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>using<sp/>this<sp/>default<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DefaultElspPath<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="453" refid="structSLMplsIlmGetMsgRsp" refkind="compound"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forwarding<sp/>class<sp/>with<sp/>valid<sp/>range<sp/>&lt;0-7&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>ForwardingClass<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>messages<sp/>defines<sp/>an<sp/>ILM<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmEntry" kindref="compound">SLMplsIlmEntry</ref><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ILM<sp/>Key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsIlmKey" kindref="compound">SLMplsIlmKey</ref><sp/>Key<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>path<sp/>(NHLFE)<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsPath" kindref="compound">SLMplsPath</ref><sp/>Paths<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>batch<sp/>of<sp/>MPLS<sp/>ILM<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>send<sp/>a<sp/>batch<sp/>of<sp/>ILM<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmMsg" kindref="compound">SLMplsIlmMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>Object<sp/>Operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__SLCommonTypes_1ga0b166605b901d6e5ad5f7706ac60baf1" kindref="member">SLObjectOp</ref><sp/>Oper<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlator.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>correlate<sp/>replies<sp/>with<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Server<sp/>simply<sp/>reflects<sp/>this<sp/>field<sp/>back<sp/>in<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>Correlator<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>of<sp/>ILM<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsIlmEntry" kindref="compound">SLMplsIlmEntry</ref><sp/>MplsIlms<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>result<sp/>of<sp/>the<sp/>ILM<sp/>entry<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmRes" kindref="compound">SLMplsIlmRes</ref><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corresponding<sp/>error<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ILM<sp/>Key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsIlmKey" kindref="compound">SLMplsIlmKey</ref><sp/>Key<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>batch<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>convey<sp/>the<sp/>result<sp/>of<sp/>the<sp/>ILM<sp/>batch<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmMsgRsp" kindref="compound">SLMplsIlmMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlator.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>correlate<sp/>replies<sp/>with<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Server<sp/>simply<sp/>reflects<sp/>this<sp/>field<sp/>back<sp/>in<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>Correlator<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Summary<sp/>result<sp/>of<sp/>the<sp/>bulk<sp/>operation<sp/>(refer<sp/>to<sp/>enum<sp/>SLErrorStatus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>general,<sp/>the<sp/>StatusSummary<sp/>implies<sp/>one<sp/>of<sp/>3<sp/>things:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>SL_SUCCESS:<sp/>signifies<sp/>that<sp/>the<sp/>entire<sp/>bulk<sp/>operation<sp/>was<sp/>successful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Results<sp/>list<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>SL_SOME_ERR:<sp/>signifies<sp/>that<sp/>the<sp/>operation<sp/>failed<sp/>for<sp/>one<sp/>or<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entries.<sp/>In<sp/>this<sp/>case,<sp/>Results<sp/>holds<sp/>the<sp/>result<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each<sp/>individual<sp/>entry<sp/>in<sp/>the<sp/>bulk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>SL_RPC_XXX:<sp/>signifies<sp/>that<sp/>the<sp/>entire<sp/>bulk<sp/>operation<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>this<sp/>case,<sp/>the<sp/>Results<sp/>list<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>StatusSummary<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>errors,<sp/>this<sp/>field<sp/>indicates<sp/>which<sp/>entry<sp/>in<sp/>the<sp/>bulk<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>erroneous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsIlmRes" kindref="compound">SLMplsIlmRes</ref><sp/>Results<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>Get<sp/>Message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>message<sp/>is<sp/>used<sp/>to<sp/>query<sp/>the<sp/>attributes<sp/>of<sp/>an<sp/>ILM<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmGetMsg" kindref="compound">SLMplsIlmGetMsg</ref><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlator.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>correlate<sp/>replies<sp/>with<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Server<sp/>simply<sp/>reflects<sp/>this<sp/>field<sp/>back<sp/>in<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>Correlator<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>Key<sp/>is<sp/>not<sp/>specified,<sp/>then<sp/>request<sp/>up<sp/>to<sp/>the<sp/>first<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;EntriesCount&apos;<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLMplsIlmKey" kindref="compound">SLMplsIlmKey</ref><sp/>Key<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>entries<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>EntriesCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>GetNext<sp/>is<sp/>FALSE:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request<sp/>up<sp/>to<sp/>&apos;EntriesCount&apos;<sp/>entries<sp/>starting<sp/>from<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>GetNext<sp/>is<sp/>TRUE,<sp/>or<sp/>if<sp/>the<sp/>key<sp/>exact<sp/>match<sp/>is<sp/>not<sp/>found:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>request<sp/>up<sp/>to<sp/>&apos;EntriesCount&apos;<sp/>entries<sp/>starting<sp/>from<sp/>the<sp/>key&apos;s<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetNext<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MPLS<sp/>ILM<sp/>Get<sp/>Message<sp/>Response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal">message<sp/><ref refid="structSLMplsIlmGetMsgRsp" kindref="compound">SLMplsIlmGetMsgRsp</ref><sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlator.<sp/>This<sp/>can<sp/>be<sp/>used<sp/>to<sp/>correlate<sp/>replies<sp/>with<sp/>requests.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Server<sp/>simply<sp/>reflects<sp/>this<sp/>field<sp/>back<sp/>in<sp/>the<sp/>reply.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64<sp/>Correlator<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>Of<sp/>File.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>True,<sp/>it<sp/>indicates<sp/>that<sp/>the<sp/>server<sp/>has<sp/>returned<sp/>M,<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>M<sp/>&lt;<sp/>N,<sp/>of<sp/>the<sp/>original<sp/>N<sp/>requested<sp/>Entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Eof<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Status<sp/>of<sp/>the<sp/>Get<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSLErrorStatus" kindref="compound">SLErrorStatus</ref><sp/>ErrStatus<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returned<sp/>entries<sp/>as<sp/>requested<sp/>in<sp/>the<sp/>Get<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>ErrStatus<sp/>is<sp/>SL_SUCCESS,<sp/>Entries<sp/>contains<sp/>the<sp/>info<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>repeated<sp/><ref refid="structSLMplsIlmEntry" kindref="compound">SLMplsIlmEntry</ref><sp/>Entries<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/slapi/grpc/protos/sl_mpls.proto"/>
  </compounddef>
</doxygen>
